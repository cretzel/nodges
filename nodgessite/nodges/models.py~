from django.db import models

class Node(models.Model):
    title = models.CharField(max_length=255)
    create_date = models.DateTimeField()

    def __unicode__(self):
        return self.title

class HalfEdge(models.Model):
    title = models.CharField(max_length=255)
    create_date = models.DateTimeField()
    from_node = models.ForeignKey(Node, verbose_name='from_node', related_name='outgoing_edges')
    to_node = models.ForeignKey(Node, verbose_name='to_node', related_name='incoming_edges')
    twin = models.ForeignKey('self', null=True)

    def createFullEdge(title, create_date, fromNode, toNode):
        half_edge = HalfEdge(title=title, create_date=create_date, from_node=fromNode, to_node=toNode)
        twin = HalfEdge(title=title, create_date=create_date, from_node=toNode, to_node=fromNode)
        half_edge.twin = twin
        twin.twin = half_edge
        return (half_edge, twin)

    def __unicode__(self):
        return "%s [%s -> %s]" % (self.title, self.from_node, self.to_node)
    
    createFullEdge = staticmethod(createFullEdge)

